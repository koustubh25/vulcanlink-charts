# Default values for chainlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: smartcontract/chainlink
  pullPolicy: IfNotPresent
  command: ["chainlink", "local", "node"]
  args: [
    "-a", "/etc/chainlink/api",
    "-p", "/etc/chainlink/password"]
  #args: ["-c",
  #      "mkdir -p /chainlink;
  #      echo $API_EMAIL > /chainlink/.api;
  #      echo $API_PASSWORD >> /chainlink/.api;
  #      echo $WALLET_PASSWORD > /chainlink/.password;
  #      chainlink local node -a /chainlink/.api -p /chainlink/.password;
  #      while true; do sleep 10;done;"]
config:
  ROOT: /chainlink
  LOG_LEVEL: debug
  ETH_CHAIN_ID: "1"
  MIN_OUTGOING_CONFIRMATIONS: "2"
  LINK_CONTRACT_ADDRESS: "0x514910771af9ca656af840dff83e8264ecf986ca"
  CHAINLINK_TLS_PORT: "0"
  SECURE_COOKIES: "false"
  ALLOW_ORIGINS: "*"
  ETH_URL: ws://geth:8546
  API_EMAIL: "" #DEPRECATED
  API_PASSWORD: "" #DEPRECATED
  API_LOGIN: |
    API_EMAIL
    API_LOGIN
  WALLET_PASSWORD: ""
  DATABASE_TIMEOUT: "500ms"
  DATABASE_URL: postgresql://postgres@postgresql:5432/chainlink
  EXPLORER_URL: ""
  EXPLORER_ACCESS_KEY: ""
  EXPLORER_SECRET: ""
  MINIMUM_CONTRACT_PAYMENT: "50000000000000000"
  ORACLE_CONTRACT_ADDRESS: ""
  GAS_UPDATER_ENABLED: "true"
  FEATURE_FLUX_MONITOR: "true"
  FEATURE_EXTERNAL_INITIATORS: "true"
  JSON_CONSOLE: "true"
  ENABLE_BULLETPROOF_TX_MANAGER: "true"
  ETH_HEAD_TRACKER_MAX_BUFFER_SIZE: "3"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations: {}

podSecurityContext: {}
securityContext: {}

container:
  ports:
    http: 6688
    listener: 30668 #8068

volumes:
  config:
    mountPath: /etc/chainlink

service:
  type: ClusterIP
  http: 6688

serviceP2P:
  type: ClusterIP
  listener: 30668 #8068

prometheus: false

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}